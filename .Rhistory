a <- available.packages()
View(a)
head (rownames(a),3)
install.packages("slidify")
install.packages("ggplot2")
library(ggplot2)
View(a)
find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("kernsmooth R")
p <- c(3,5,6,8)
q <- c(3,3,3)
p+q
r <- (1,1,1,1)
r <- c(1,1,1,1)
p+r
p*r
s <- r(2,2,2,2)
p/r
p-r
now()
load("C:/Users/natha/datasciencecoursera/HelloWorld.md")
plot(1:10)
plot(10:1)
knitr::kable(head(mtcars, 10))
getwd()
setwd("D:/Coursera")
getwd()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
setwd("D:/Coursera/ProgrammingAssignment2")
getwd9)
getwd()
source(cachematrix.R)
source("cachematrix.R")
View(cacheSolve)
View(cacheSolve)
?matrix
matrix(1:4, 2, 2)
m<-matrix(1:4, 2, 2)
solver(m)
solve(m)
inverse_m <- solve(m)
m*m
m*inverse_m
inverse_m*m
m %*% inverse_m
source('D:/Coursera/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(m)
source('D:/Coursera/ProgrammingAssignment2/cachemean.R')
source('D:/Coursera/ProgrammingAssignment2/cachemean.R')
vect <- 1:5
vect <- 1:10
mean(vect)
makeVector(vect)
source('D:/Coursera/ProgrammingAssignment2/cachemean.R')
cachemean(vect)
vect
makeVector(1:5)
cachemean(1:5)
cachemean(makeVector(1:5))
cachemean(makeVector(1:5))
vect <- makeVector(1:10)
cachemean(vect)
cachemean(vect)
cachemean(vect)
vect <- makeVector(1:11)
cachemean(vect)
cachemean(vect)
vect <- makeVector(1:10)
cachemean(vect)
cachemean(vect)
source('D:/Coursera/ProgrammingAssignment2/cachematrix.R')
m
inverse_m <- makeCacheMatrix(m)
matr <- matrix(1:16, 4, 4)
matr
inverse_matr <- makeCacheMatrix(matr)
source('D:/Coursera/ProgrammingAssignment2/cachematrix.R')
inverse_matr
cacheSolve(inverse_matr)
source('D:/Coursera/ProgrammingAssignment2/cachematrix.R')
cacheSolve(inverse_matr)
matr <- matrix(1:25, 5, 5)
inverse_matr <- makeCacheMatrix(matr)
cacheSolve(inverse_matr)
matr <- matrix(1:9, 3, 3)
matr
inverse_matr <- makeCacheMatrix(matr)
cacheSolve(inverse_matr)
solve(matr)
det(matr)
matr <- matrix(1:4, 2, 2)
det(matr)
solve(matr)
inverse_matr <- makeCacheMatrix(matr)
cacheSolve(inverse_matr)
cacheSolve(inverse_matr)
solve(matr)
cacheSolve(inverse_matr) %*% matr
source('D:/Coursera/ProgrammingAssignment2/cachematrix.R')
source('D:/Coursera/ProgrammingAssignment2/cachematrix.R')
inverse_matr <- makeCacheMatrix(matr)
cacheSolve(inverse_matr) %*% matr
cacheSolve(inverse_matr)
matr<- matrix(c(2,3,7,9),2,2)
matr
solve(matr)
inverse_matr <- makeCacheMatrix(matr)
cacheSolve(inverse_matr)
cacheSolve(inverse_matr) %*% matr
source('D:/Coursera/ProgrammingAssignment2/cachematrix.R')
